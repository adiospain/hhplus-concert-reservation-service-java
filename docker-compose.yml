version: '3'

networks:
  elk:
    driver: bridge
  promGra:
    driver: bridge


services:
  elasticsearch:
    build:
      context:
        ./ELK/elasticsearch
      dockerfile:
        elasticsearch.Dockerfile
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node
    networks:
      - elk
  logstash:
    build:
      context:
        ./ELK/logstash
      dockerfile:
        logstash.Dockerfile
    container_name: logstash
    ports:
      - 5000:5000
      - 9600:9600
    depends_on:
      - elasticsearch
    networks:
      - elk
  kibana:
    build:
      context:
        ./ELK/kibana
      dockerfile:
        kibana.Dockerfile
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - elk
  mysql:
    image:
      mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ticketing
      MYSQL_USER: cons
      MYSQL_PASSWORD: sa
    ports:
      - 3306:3306
  playground:
    image:
      mysql:8.0
    container_name: playground
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: playground
      MYSQL_USER: cons
      MYSQL_PASSWORD: sa
    ports:
      - 3307:3306
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeepr
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    extra_hosts:
        - "host.docker.internal:host-gateway"
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    networks:
      - promGra
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    depends_on:
      - prometheus
    networks:
      - promGra
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - promGra
